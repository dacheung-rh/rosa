
ssh -i aws-key-pair.pem ec2-user@18.139.208.239

#############################################################
AWS_TEST_HOST=$(aws ec2 run-instances \
  --image-id $AWS_AMI \
  --count 1 \
  --instance-type t3.small \
  --key-name $AWS_KEY_PAIR \
  --security-group-ids $AWS_BASTION_SECURITY_GROUP \
  --subnet-id $PRIVATE_SUBNET \
  --associate-public-ip-address \
  --query 'Instances[0].InstanceId' \
  --output text)

aws ec2 create-tags \
  --resources $AWS_TEST_HOST \
  --tags Key=Name,Value=test-host

AWS_TEST_HOST_PUBLIC_IP=$(aws ec2 describe-instances \
  --instance-ids $AWS_TEST_HOST \
  --query 'Reservations[0].Instances[0].PublicIpAddress' \
  --output text)
  
echo "ssh -i $AWS_KEY_PAIR.pem ec2-user@$AWS_TEST_HOST_PUBLIC_IP"

ssh -i aws-key-pair.pem ec2-user@18.139.208.239

#############################################################################
#############################################################################

yum install -y podman jq net-tools bind-utils unzip docker

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

aws sts get-caller-identity

curl "https://mirror.openshift.com/pub/openshift-v4/clients/rosa/latest/rosa-linux.tar.gz" -o rosa-linux.tar.gz
tar xvf rosa-linux.tar.gz
chmod +x rosa
mv rosa /usr/local/bin/rosa


rosa download openshift-client

tar xvf openshift-client-linux.tar.gz
chmod +x oc
mv oc kubectl /usr/local/bin

rosa verify openshift-client

